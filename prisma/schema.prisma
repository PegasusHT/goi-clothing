generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  rating      Float           @default(0)
  sizes       String[]        
  made        String
  reviews     Review[]        
  pictures    Picture[]       @relation(fields: [pictureIDs], references: [id])
  pictureIDs  String[]        @db.ObjectId 
  videos      Video[]
  categories  Category[]      @relation(fields: [categoryIDs], references: [id])
  categoryIDs String[]        @db.ObjectId
  collections  Collection[]   @relation(fields: [collectionIDs], references: [id])
  collectionIDs String[]      @db.ObjectId
  cartItem    CartItem[]

  @@map("products")
}

model Picture {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  productName String[]
  url         String
  products     Product[]   @relation(fields: [productIDs], references: [id])
  productIDs   String[]    @db.ObjectId

  @@map("pictures")
}

model Collection {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  products      Product[]   @relation(fields: [productIDs], references: [id])
  productIDs    String[]      @db.ObjectId
  
  @@map("collections")
} 

model Category {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  products    Product[]   @relation(fields: [productIDs], references: [id])
  productIDs  String[]    @db.ObjectId

  @@map("categories")
} 

model Review {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  rating      Float
  comment     String
  product     Product    @relation(fields: [productId], references: [id])
  productId   String     @db.ObjectId
  reviewer    User       @relation(fields: [reviewerId], references: [id])
  reviewerId  String    @db.ObjectId

  @@map("reviews")
} 

model Video {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  url         String
  product     Product    @relation(fields: [productId], references: [id])
  productId   String    @db.ObjectId

  @@map("videos")
}

model User {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  reviews     Review[]
  cart        Cart[]
  cartId      String

  @@map("users")
}

model Cart {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  products    CartItem[]
  user        User       @relation(fields: [userId], references: [id])
  userId      String     @db.ObjectId

  @@map("carts")
}

model CartItem {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  product     Product    @relation(fields: [productId], references: [id])
  productId   String     @db.ObjectId
  quantity    Int
  cart        Cart       @relation(fields: [cartId], references: [id])
  cartId      String     @db.ObjectId

  @@map("cartItems")
} 